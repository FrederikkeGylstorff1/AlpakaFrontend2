// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestAlpaka.Model;

#nullable disable

namespace RestAlpaka.Migrations
{
    [DbContext(typeof(AlpakaDbContext))]
    [Migration("20240130175450_img3MigrationName")]
    partial class img3MigrationName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RestAlpaka.Model.Alpaka", b =>
                {
                    b.Property<int>("alpaka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alpaka_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("alpaka");

                    b.ToTable("Alpakas");
                });

            modelBuilder.Entity("RestAlpaka.Model.Bookings", b =>
                {
                    b.Property<int>("Booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Alpaka_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Booking_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("End_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Booking_id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("RestAlpaka.Model.Customers", b =>
                {
                    b.Property<int>("Customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Location_id")
                        .HasColumnType("int");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Customer_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RestAlpaka.Model.Event", b =>
                {
                    b.Property<int>("Event_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Event_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Location_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Event_id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("RestAlpaka.Model.Location", b =>
                {
                    b.Property<int>("Location_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Location_id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("RestAlpaka.Model.Payments", b =>
                {
                    b.Property<int>("Payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Booking_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Payment_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Payment_id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("RestAlpaka.Model.Reviews", b =>
                {
                    b.Property<int>("Review_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Alpaka_id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Customer_id")
                        .HasColumnType("int");

                    b.Property<int>("Customer_id1")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("Review_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Review_id");

                    b.HasIndex("Alpaka_id");

                    b.HasIndex("Customer_id1");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RestAlpaka.Model.Tickets", b =>
                {
                    b.Property<int>("TicketNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Customer_id")
                        .HasColumnType("int");

                    b.Property<int>("Customer_id1")
                        .HasColumnType("int");

                    b.Property<int>("Event_id")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("TicketNumber");

                    b.HasIndex("Customer_id1");

                    b.HasIndex("Event_id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("RestAlpaka.Model.Users", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("User_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RestAlpaka.Model.Reviews", b =>
                {
                    b.HasOne("RestAlpaka.Model.Alpaka", "Alpaka")
                        .WithMany()
                        .HasForeignKey("Alpaka_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestAlpaka.Model.Customers", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alpaka");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RestAlpaka.Model.Tickets", b =>
                {
                    b.HasOne("RestAlpaka.Model.Customers", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestAlpaka.Model.Event", "Event")
                        .WithMany()
                        .HasForeignKey("Event_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Event");
                });
#pragma warning restore 612, 618
        }
    }
}
